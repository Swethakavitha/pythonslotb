def matrix_addition(A, B):
    # Check if matrices A and B have the same dimensions
    if len(A) != len(B) or len(A[0]) != len(B[0]):
        return "Matrices must have the same dimensions for addition."
    
    # Initialize a result matrix with zeros of the same dimensions
    rows = len(A)
    cols = len(A[0])
    result = [[0]*cols for _ in range(rows)]
    
    # Perform element-wise addition
    for i in range(rows):
        for j in range(cols):
            result[i][j] = A[i][j] + B[i][j]
    
    return result

# Function to handle test cases
def handle_test_cases():
    test_cases = [
        ([[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12]]),  # Test Case 1
        ([[3, 4], [5, 6], [7, 8]], [[1, 2], [9, 10], [11, 12]]),  # Test Case 2
        ([[1, 2], [3, 4]], [[-1, -2], [-3, -4]]),  # Test Case 3
        ([[0, 0], [0, 0]], [[0, 0], [0, 0]]),  # Test Case 4
        ([[1]], [[-1]])  # Test Case 5
    ]
    
    for idx, (A, B) in enumerate(test_cases, start=1):
        print(f"Test Case {idx}:")
        print(f"Matrix A:")
        for row in A:
            print(row)
        print(f"Matrix B:")
        for row in B:
            print(row)
        
        result = matrix_addition(A, B)
        if isinstance(result, str):
            print(result)  # Print error message if matrices have different dimensions
        else:
            print("Result Matrix:")
            for row in result:
                print(row)
        print()

# Run the test cases
handle_test_cases()
